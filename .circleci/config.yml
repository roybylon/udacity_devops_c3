version: 2.1
#ansible-playbook -i inventory main.yml
#python:3.10.5-alpine3.16
commands:
   # Exercise - Rollback
  destroy_environment:
    steps:
    - run:
        name: Destroy environment
        # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
        # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
        when: on_fail
        command: |
          aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  create_infrastructure: 
    docker:
    - image: amazon/aws-cli
    steps:
    - checkout
    - run:
        name: Create Cloudformation Stack
        command: |
          aws cloudformation deploy \
            --template-file template.yml \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1
    # Fail the job intentionally to simulate an error.
    # Uncomment the line below if you want to fail the current step
    #- run: return 1
    - destroy_environment


  configure_infrastructure: 
    docker:
    - image: python:3.7-alpine3.11
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints: ["56:0d:f9:b4:67:9d:6c:77:9e:8b:4f:d4:8d:5c:d4:cc"]
    - run:
        name: Install dependencies
        command: |
          apk add --update ansible #install the dependencies
    - run:
        name: Install dependencies (openssh)
        command: |
          apk add --update openssh # Install openssh
    - run:
        name: Configure server
        command: |
          ansible-playbook -i inventory main.yml
  
  #Exercise: Smoke Testing
  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #   - run: apk add --update curl
  #   - run:
  #       name: smoke test
  #       command: |
  #         URL="https://blog.udacity.com/"
  #         # Test if website exists
  #         if curl -s --head ${URL} 
  #         then
  #           return 0
  #         else
  #           return 1
  #         fi
  #   - destroy_environment
  #Exercise: Smoke Testing
  smoke_test:
    docker:
    - image: alpine:latest
    steps:
    - run:
        name: Test job
        # Fail the job intentionally to simulate an error.
        command:  return 1
    - destroy_environment

workflows:
  my_workflow:
    jobs:
    - create_infrastructure
    #- configure_infrastructure
    - smoke_test
        requires:
          - create_infrastructure